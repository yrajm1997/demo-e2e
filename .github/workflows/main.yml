name: CI Pipeline
on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  train:
    env:
      RE_TRAIN: False      # Re-train ?
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
    - name: Install dependencies
      if: RE_TRAIN
      run: pip install -r requirements/requirements.txt
    - name: Train and save pipeline
      if: RE_TRAIN
      env:
        #RE_TRAIN: True
        DATA_VERSION: v1.6
        GH_USERNAME: ${{ secrets.GH_USERNAME }}
        GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        #MLFLOW_TRACKING_URI: http://13.201.73.24:5000/
        #MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
        #MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
        # GIT_COMMIT_MSG: ${{ github.event.head_commit.message }}
      run: python titanic_model/train_pipeline.py
#    - uses: actions/upload-artifact@v2
#      with:
#        name: my-trained-pipeline
#        path: titanic_model/trained_models/*.pkl
#        retention-days: 1

  test:
    needs: train
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: '3.10'
#    - uses: actions/download-artifact@v2
#      with:
#        name: my-trained-pipeline
#        path: titanic_model/trained_models
    - name: Install dependencies
      run: pip install -r requirements/test_requirements.txt
    - name: Test with pytest
      env:
        GH_USERNAME: ${{ secrets.GH_USERNAME }}
        GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      #  MLFLOW_TRACKING_URI: http://13.201.73.24:5000/
      run: pytest
